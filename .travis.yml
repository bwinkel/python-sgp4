# Config file for automatic testing at travis-ci.org

language: python

env:
  global:
    # CIBW_BEFORE_TEST run before wheel installed...
    # - CIBW_BEFORE_TEST="python -c \"from sgp4 import api; print('accelerated API:', api.accelerated);\""
    - CIBW_TEST_COMMAND="python -m sgp4.tests"
    - CIBW_BUILD_VERBOSITY=1
    - CIBW_BUILD="cp36-*"

jobs:
  include:

    # perform a linux build
    - name: "Linux Python 3.5"
      services: docker

    # and a mac build
    - name: "MacOS clang vanilla"
      os: osx
      language: shell
      before_install:
        - gcc --version
        - brew update
        - brew install libomp
        # if not installed into /usr/local/opt see
        # https://iscinumpy.gitlab.io/post/omp-on-high-sierra/
        - brew --prefix libomp
      env:
        - CFLAGS="-Xpreprocessor -fopenmp $CFLAGS"
        - CXXFLAGS="-Xpreprocessor -fopenmp $CXXFLAGS"
      #   - CIBW_BEFORE_BUILD="brew update; brew install libomp"

    - name: "MacOS llvm"
      os: osx
      language: shell
      before_install:
        - gcc --version
        - brew update
        - brew install llvm libomp
        - gcc --version
      env:
      #   - CIBW_BEFORE_BUILD="brew update; brew install libomp"
        - PATH="/usr/local/opt/llvm/bin:$PATH"
        - LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib -L/usr/local/opt/libffi/lib"
        - CPPFLAGS="-I/usr/local/opt/llvm/include -I/usr/local/opt/libffi/include"

    - name: "MacOS gcc"
      os: osx
      language: shell
      before_install:
        # - brew update
        # - brew install gcc
        # - brew link --overwrite gcc
        - gcc --version
        # not sure, if the following can be improved
        - gcc-6 --version && export CC="gcc-6" && export CXX="gcc-6" && export LD="gcc-6" && export LDFLAGS="-Wl,-rpath,/usr/local/opt/gcc/lib/gcc/6/" || true
        - gcc-7 --version && export CC="gcc-7" && export LD="gcc-7" && export LDFLAGS="-Wl,-rpath,/usr/local/opt/gcc/lib/gcc/7/" || true
        - gcc-8 --version && export CC="gcc-8" && export LD="gcc-8" && export LDFLAGS="-Wl,-rpath,/usr/local/opt/gcc/lib/gcc/8/" || true
        - gcc-9 --version && export CC="gcc-9" && export CXX="gcc-9" && export LD="gcc-9" && export LDFLAGS="-Wl,-rpath,/usr/local/opt/gcc/lib/gcc/9/" || true
        - gcc-10 --version && export CC="gcc-10" && export LD="gcc-10" && export LDFLAGS="-Wl,-rpath,/usr/local/opt/gcc/lib/gcc/10/" || true

    # and a windows build
    - name: "Windows"
      os: windows
      language: shell
      before_install:
        - choco install python3 --version 3.8.0
        - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"


install:
  - python -m pip install cibuildwheel

script:
  # build the wheels, put them into './wheelhouse'
  # cibuildwheel will test a variety of python versions!
  - python -m cibuildwheel --output-dir wheelhouse



# install:
#   # - "pip install -vv -e ."
#   - "python setup.py install"
#   - "pip install pyflakes"

# script:
#   # check if accelerated api is available:
#   - python -c "from sgp4 import api; print('accelerated API:', api.accelerated);"
#   # We invoke the tests directly instead of using "-m discover" because
#   # that would set the current working directory to the "sgp4/" package
#   # itself, allowing "io.py" to shadow the real io module and thereby
#   # causing failure when NumPy tries to import.
#   - python -m sgp4.tests
#   # - pyflakes $(find sgp4/ -name '*.py')
#   # - |-
#   #   if grep ' $' $(find extension/ sgp4/ -type f) ;then echo ERROR: TRAILING WHITESPACE; exit 0 ;fi
